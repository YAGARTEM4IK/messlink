document.addEventListener('DOMContentLoaded', function() {
    const sendButton = document.getElementById('sendButton');
    const messageInput = document.getElementById('messageInput');
    const messagesContainer = document.getElementById('messages');
    const chatList = document.getElementById('chatList');
    const chatNameElement = document.getElementById('chatName');

    const chatMessages = {
        1: [
            { text: "–ü—Ä–∏–≤–µ—Ç, —ç—Ç–æ —á–∞—Ç 1!", sender: "system" }
        ],
        2: [
            { text: "–ü—Ä–∏–≤–µ—Ç –∏–∑ —á–∞—Ç–∞ 2!", sender: "system" }
        ],
        3: [
            { text: "–ß–∞—Ç 3 —Ä–∞–±–æ—Ç–∞–µ—Ç!", sender: "system" }
        ]
    };

    let currentChatId = 1;
    let chatIdCounter = 4;
    let chatType = "personal";

    // –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –∑–∞–≥–ª—É—à–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    let isMuted = false;

    // –ú–∞—Å—Å–∏–≤ —Å–æ —Å–º–∞–π–ª–∏–∫–∞–º–∏ (–º–æ–∂–Ω–æ —Ä–∞—Å—à–∏—Ä–∏—Ç—å)
    const emojis = [
        'üòÄ', 'üòÉ', 'üòÑ', 'üòÅ', 'üòÜ', 'üòÖ', 'üòÇ', 'ü§£', 'üòä', 'üòá', 'üôÇ', 'üôÉ', 'üòâ', 'üòå', 'üòç', 'ü•∞',
        'üòò', 'üòó', 'üòô', 'üòö', 'üòã', 'üòõ', 'üòù', 'üòú', 'ü§™', 'ü§®', 'üßê', 'ü§ì', 'üòé', 'ü§©', 'ü•≥', 'üòè',
        'üòí', 'üòû', 'üòî', 'üòü', 'üòï', 'üôÅ', '‚òπÔ∏è', 'üò£', 'üòñ', 'üò´', 'üò©', 'ü•∫', 'üò¢', 'üò≠', 'üò§', 'üò†',
        'üò°', 'ü§¨', 'ü§Ø', 'üò≥', 'ü•µ', 'ü•∂', 'üò±', 'üò®', 'üò∞', 'üò•', 'üòì', 'ü´£', 'ü§ó', 'ü´£', 'ü§î', 'ü´°',
        'ü§´', 'ü§≠', 'ü´£', 'ü§°', 'ü§•', 'ü•±', 'üò¥', 'ü§§', 'üòµ', 'ü•¥', 'ü§¢', 'ü§Æ', 'ü§ß', 'ü§ï', 'ü§í', 'ü§ï',
        'üëª', 'üëΩ', 'üëæ', 'ü§ñ', 'üéÉ', 'üôà', 'üôâ', 'üôä', 'üíã', 'üíå', 'üíò', 'üíù', 'üíñ', 'üíó', 'üíì', 'üíû',
        'üíï', 'üíñ', '‚ù£', 'üíî', '‚ù§Ô∏è', 'üß°', 'üíõ', 'üíö', 'üíô', 'üíú', 'üñ§', 'ü§ç', 'ü§é', 'üíØ', 'üí¢', 'üí•',
        'üí´', 'üí¶', 'üí®', 'üï≥Ô∏è', '‚ú®', 'üåü', 'üí´', 'üí¨', 'üëÅÔ∏è‚Äçüó®Ô∏è', 'üí≠', 'üí°', 'üíØ', '‚úÖ', '‚ù§Ô∏è', 'üëç',
    ];

    function displayMessages() {
        messagesContainer.innerHTML = '';

        const messages = chatMessages[currentChatId] || [];

        messages.forEach(message => {
            const messageElement = document.createElement('div');
            messageElement.classList.add('message');
            if (message.sender === "user") {
                messageElement.classList.add('user-message');
            } else if (message.sender === "system") {
                messageElement.classList.add('system-message');
            }

            if (message.text) {
                messageElement.textContent = message.text;
            }

            if (message.image) {
                const imgElement = document.createElement('img');
                imgElement.src = message.image;
                messageElement.appendChild(imgElement);
            }

            if (message.file) {
                const fileLink = document.createElement('a');
                fileLink.href = URL.createObjectURL(message.file);
                fileLink.textContent = message.file.name;
                fileLink.download = message.file.name;
                fileLink.classList.add('file-link');
                messageElement.appendChild(fileLink);
            }

            messagesContainer.appendChild(messageElement);
        });

        messagesContainer.scrollTop = messagesContainer.scrollHeight;
    }

    function addMessage(text, sender = "user") {
        chatMessages[currentChatId].push({ text: text, sender: sender });
        displayMessages();
        // –ó–¥–µ—Å—å –¥–æ–±–∞–≤–∏–º –ª–æ–≥–∏–∫—É –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π, –µ—Å–ª–∏ –æ–Ω–∏ –Ω–µ –∑–∞–≥–ª—É—à–µ–Ω—ã
        if (!isMuted) {
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º API Notification)
            showNotification(`–ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç–µ ${chatNameElement.textContent}`);
        }
    }

    function showNotification(message) {
        if (!("Notification" in window)) {
            alert(message); // Fallback –¥–ª—è –±—Ä–∞—É–∑–µ—Ä–æ–≤, –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—â–∏—Ö Notification API
            return;
        }

        if (Notification.permission === "granted") {
            new Notification(message);
        } else if (Notification.permission !== "denied") {
            Notification.requestPermission().then(function (permission) {
                if (permission === "granted") {
                    new Notification(message);
                }
            });
        }
    }

    function addImageMessage(dataURL) {
        chatMessages[currentChatId].push({ image: dataURL, sender: "user" });
        displayMessages();
    }

    function addFileMessage(file) {
        chatMessages[currentChatId].push({ file: file, sender: "user" });
        displayMessages();
    }

    sendButton.addEventListener('click', function() {
        const messageText = messageInput.value.trim();

        if (messageText !== '') {
            addMessage(messageText);
            messageInput.value = '';
        }
    });

    messageInput.addEventListener('keypress', function(event) {
        if (event.key === 'Enter') {
            sendButton.click();
            event.preventDefault();
        }
    });

    chatList.addEventListener('click', function(event) {
        const chatItem = event.target.closest('li');
        if (chatItem && chatItem.dataset.chatId) {
            const chatId = parseInt(chatItem.dataset.chatId);

            if (chatId === currentChatId) {
                return;
            }

            const activeChat = chatList.querySelector('.active');
            if (activeChat) {
                activeChat.classList.remove('active');
            }

            chatItem.classList.add('active');
            currentChatId = chatId;
            displayMessages();
            loadMuteState(); // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏ —Å–º–µ–Ω–µ —á–∞—Ç–∞

            chatNameElement.textContent = chatItem.textContent;
        }
    });

    displayMessages();

    const initialActiveChat = chatList.querySelector('.active');
    if (initialActiveChat) {
        chatNameElement.textContent = initialActiveChat.textContent;
    }

    const profileMenu = document.querySelector('.profile-menu');
    const profileModal = document.getElementById('profileModal');
    const settingsModal = document.getElementById('settingsModal');
    const featuresModal = document.getElementById('featuresModal');

    const createChatButton = document.getElementById('createChatButton');
    const createChatModal = document.getElementById('createChatModal');
    const newChatNameInput = document.getElementById('newChatNameInput');
    const confirmCreateChat = document.getElementById('confirmCreateChat');

    const createPersonalChatButton = document.getElementById('createPersonalChatButton');
    const createGroupChatButtonInModal = document.getElementById('createGroupChatButtonInModal');

    const dropdownToggle = document.querySelector('.dropdown-toggle');
    const dropdownMenu = document.querySelector('.dropdown-menu');
    const dropdown = document.querySelector('.dropdown');
    const chatInfoModal = document.getElementById('chatInfoModal');
    const chatInfoContent = document.getElementById('chatInfoContent');
    const closeModalButtons = document.querySelectorAll('.close');

    if (profileMenu && profileModal && settingsModal && featuresModal) {
        profileMenu.addEventListener('click', function(event) {
            const target = event.target;
            if (target.tagName === 'A') {
                event.preventDefault();
                const menuItem = target.textContent.trim();

                if (menuItem === '–û—Å–Ω–æ–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ') {
                    profileModal.style.display = "block";
                } else if (menuItem === '–ù–∞—Å—Ç—Ä–æ–π–∫–∏') {
                    settingsModal.style.display = "block";
                } else if (menuItem === '–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏') {
                    featuresModal.style.display = "block";
                }

                console.log(`–í—ã–±—Ä–∞–Ω –ø—É–Ω–∫—Ç –º–µ–Ω—é: ${menuItem}`);
            }
        });
    }

    if (createChatButton && createChatModal && createPersonalChatButton && createGroupChatButtonInModal) {
        createChatButton.addEventListener('click', function() {
            createChatModal.style.display = "block";
        });

        createPersonalChatButton.addEventListener('click', function() {
            chatType = "personal";
        });

        createGroupChatButtonInModal.addEventListener('click', function() {
            chatType = "group";
        });
    }

    const addFileButton = document.getElementById('addFileButton');
    if (addFileButton) {
        addFileButton.addEventListener('click', function() {
            const fileInput = document.createElement('input');
            fileInput.type = 'file';
            fileInput.addEventListener('change', function(event) {
                const file = event.target.files[0];
                if (file) {
                    addFileMessage(file);
                }
            });
            fileInput.click();
        });
    }

    if (newChatNameInput && confirmCreateChat && chatList) {
        confirmCreateChat.addEventListener('click', function() {
            const newChatName = newChatNameInput.value.trim();
            if (newChatName !== '') {
                const newChatItem = document.createElement('li');
                newChatItem.dataset.chatId = chatIdCounter;
                newChatItem.textContent = newChatName;
                newChatItem.innerHTML += `<i class="fas fa-bell-slash muted-icon" data-chat-id="${chatIdCounter}" style="display: none;"></i>`; // –î–æ–±–∞–≤–ª—è–µ–º –∏–∫–æ–Ω–∫—É –¥–ª—è –Ω–æ–≤–æ–≥–æ —á–∞—Ç–∞

                chatList.appendChild(newChatItem);

                const activeChat = chatList.querySelector('.active');
                if (activeChat) {
                    activeChat.classList.remove('active');
                }

                newChatItem.classList.add('active');

                currentChatId = chatIdCounter;
                chatMessages[currentChatId] = [];
                displayMessages();
                loadMuteState();

                chatNameElement.textContent = newChatName;

                chatIdCounter++;

                createChatModal.style.display = "none";
                newChatNameInput.value = '';
            }
        });
    }

    if (dropdownToggle && dropdownMenu && dropdown) {
        dropdownToggle.addEventListener('click', function(event) {
            event.stopPropagation();
            dropdown.classList.toggle('show');
        });

        document.addEventListener('click', function(event) {
            if (!dropdown.contains(event.target)) {
                dropdown.classList.remove('show');
            }
        });

        const chatInfoLink = document.getElementById('chatInfoLink');
        if (chatInfoLink) {
            chatInfoLink.addEventListener('click', function(event) {
                event.preventDefault();
                displayChatInfo();
                chatInfoModal.style.display = "block";
                dropdown.classList.remove('show');
            });
        }

        const muteChatLink = document.getElementById('muteChatLink');
        if (muteChatLink) {
            muteChatLink.addEventListener('click', function(event) {
                event.preventDefault();
                toggleMute();
                dropdown.classList.remove('show');
            });
        }

        const deleteChatLink = document.getElementById('deleteChatLink');
        if (deleteChatLink) {
            deleteChatLink.addEventListener('click', function(event) {
                event.preventDefault();
                deleteChat();
                dropdown.classList.remove('show');
            });
        }
    }

    function displayChatInfo() {
        let chatInfo = "";
        if (currentChatId === 1) {
            chatInfo = "<p><strong>–ù–∞–∑–≤–∞–Ω–∏–µ:</strong> –ß–∞—Ç 1</p><p><strong>–¢–∏–ø:</strong> –õ–∏—á–Ω—ã–π —á–∞—Ç</p><p><strong>–£—á–∞—Å—Ç–Ω–∏–∫–∏:</strong> –¢—ë–º–∞ –ö–ª–æ—á–∫–æ–≤, –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 1</p>";
        } else if (currentChatId === 2) {
            chatInfo = "<p><strong>–ù–∞–∑–≤–∞–Ω–∏–µ:</strong> –ß–∞—Ç 2</p><p><strong>–¢–∏–ø:</strong> –õ–∏—á–Ω—ã–π —á–∞—Ç</p><p><strong>–£—á–∞—Å—Ç–Ω–∏–∫–∏:</strong> –¢—ë–º–∞ –ö–ª–æ—á–∫–æ–≤, –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 2</p>";
        } else if (currentChatId === 3) {
            chatInfo = "<p><strong>–ù–∞–∑–≤–∞–Ω–∏–µ:</strong> –ß–∞—Ç 3</p><p><strong>–¢–∏–ø:</strong> –õ–∏—á–Ω—ã–π —á–∞—Ç</p><p><strong>–£—á–∞—Å—Ç–Ω–∏–∫–∏:</strong> –¢—ë–º–∞ –ö–ª–æ—á–∫–æ–≤, –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 3</p>";
        } else {
            const chatName = document.querySelector(`#chatList li[data-chat-id="${currentChatId}"]`).textContent;
            chatInfo = `<p><strong>–ù–∞–∑–≤–∞–Ω–∏–µ:</strong> ${chatName}</p><p><strong>–¢–∏–ø:</strong> –ì—Ä—É–ø–ø–æ–≤–æ–π —á–∞—Ç</p><p><strong>–£—á–∞—Å—Ç–Ω–∏–∫–∏:</strong> –¢—ë–º–∞ –ö–ª–æ—á–∫–æ–≤ (–í—ã)</p>`;
        }

        chatInfoContent.innerHTML = chatInfo;
    }

    function deleteChat() {
        const chatItem = document.querySelector(`#chatList li[data-chat-id="${currentChatId}"]`);
        if (chatItem) {
            chatItem.remove();
            delete chatMessages[currentChatId];

            const chatListItems = document.querySelectorAll('#chatList li');
            if (chatListItems.length > 0) {
                currentChatId = parseInt(chatListItems[0].dataset.chatId);
                chatListItems[0].classList.add('active');
                chatNameElement.textContent = chatListItems[0].textContent;
                loadMuteState();
            } else {
                currentChatId = null;
                chatNameElement.textContent = "";
            }
            displayMessages();
        }
    }

    function toggleMute() {
        isMuted = !isMuted;
        const mutedIcon = document.querySelector(`.sidebar li[data-chat-id="${currentChatId}"] .muted-icon`);
        const muteChatLink = document.getElementById('muteChatLink');
        const muteText = document.getElementById('muteText');

        if (muteChatLink && muteText) {
            if (isMuted) {
                muteText.textContent = "–í–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è";
                mutedIcon.style.display = 'inline'; // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–∫–æ–Ω–∫—É
            } else {
                muteText.textContent = "–ó–∞–≥–ª—É—à–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è";
                mutedIcon.style.display = 'none'; // –°–∫—Ä—ã–≤–∞–µ–º –∏–∫–æ–Ω–∫—É
            }
        }
        localStorage.setItem(`chat_${currentChatId}_muted`, isMuted);
        console.log(`–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥–ª—è —á–∞—Ç–∞ ${currentChatId} ${isMuted ? '–∑–∞–≥–ª—É—à–µ–Ω—ã' : '–≤–∫–ª—é—á–µ–Ω—ã'}`);
    }

    function loadMuteState() {
        const storedMuteState = localStorage.getItem(`chat_${currentChatId}_muted`);
        const mutedIcon = document.querySelector(`.sidebar li[data-chat-id="${currentChatId}"] .muted-icon`);
        const muteChatLink = document.getElementById('muteChatLink');
        const muteText = document.getElementById('muteText');

        if (storedMuteState !== null) {
            isMuted = (storedMuteState === 'true');

            if (muteChatLink && muteText && mutedIcon) {
                if (isMuted) {
                    muteText.textContent = "–í–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è";
                    mutedIcon.style.display = 'inline'; // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–∫–æ–Ω–∫—É
                } else {
                    muteText.textContent = "–ó–∞–≥–ª—É—à–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è";
                    mutedIcon.style.display = 'none'; // –°–∫—Ä—ã–≤–∞–µ–º –∏–∫–æ–Ω–∫—É
                }
            }
        }
    }

    function populateEmojiPanel() {
        const emojiGrid = document.querySelector('.emoji-grid');
        emojis.forEach(emoji => {
            const emojiSpan = document.createElement('span');
            emojiSpan.textContent = emoji;
            emojiSpan.addEventListener('click', () => {
                messageInput.value += emoji; // –î–æ–±–∞–≤–ª—è–µ–º —Å–º–∞–π–ª–∏–∫ –≤ input
                messageInput.focus();
            });
            emojiGrid.appendChild(emojiSpan);
        });
    }

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –ø–æ –∫–Ω–æ–ø–∫–µ —Å–º–∞–π–ª–∏–∫–æ–≤
    const emojiButton = document.getElementById('emojiButton');
    const emojiPanel = document.getElementById('emojiPanel');

    if (emojiButton) {
        emojiButton.addEventListener('click', () => {
            if (emojiPanel.style.display === 'none') {
                emojiPanel.style.display = 'block';
                // –ó–∞–∫—Ä—ã–≤–∞–µ–º –ø–∞–Ω–µ–ª—å –ø–æ –∫–ª–∏–∫—É –≤–Ω–µ –µ—ë –æ–±–ª–∞—Å—Ç–∏
                document.addEventListener('click', closeEmojiPanelOnClickOutside);
            } else {
                emojiPanel.style.display = 'none';
                document.removeEventListener('click', closeEmojiPanelOnClickOutside);
            }
        });
    }
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –ø–∞–Ω–µ–ª–∏ —Å–º–∞–π–ª–∏–∫–æ–≤ –ø–æ –∫–ª–∏–∫—É –≤–Ω–µ –µ—ë –æ–±–ª–∞—Å—Ç–∏
    function closeEmojiPanelOnClickOutside(event) {
        if (!emojiPanel.contains(event.target) && event.target !== emojiButton) {
            emojiPanel.style.display = 'none';
            document.removeEventListener('click', closeEmojiPanelOnClickOutside);
        }
    }


    // –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –ø–∞–Ω–µ–ª–∏ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    populateEmojiPanel();
    loadMuteState();

    closeModalButtons.forEach(function(button) {
        button.addEventListener('click', function() {
            const modal = button.closest('.modal');
            if (modal) {
                modal.style.display = "none";
            }
        });
    });

    window.addEventListener('click', function(event) {
        if (event.target === chatInfoModal || event.target === profileModal || event.target === settingsModal || event.target === featuresModal || event.target === createChatModal) {
            chatInfoModal.style.display = "none";
            profileModal.style.display = "none";
            settingsModal.style.display = "none";
            featuresModal.style.display = "none";
            createChatModal.style.display = "none";
        }
    });
});

// v.0.2
